{"mappings":"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","sources":["js/index.js"],"sourcesContent":["mapboxgl.accessToken = 'pk.eyJ1IjoidGVzYWxvbmljayIsImEiOiJjbDdodmdheHIwaWIyM3VtbTJjaXNreGt2In0.Er4yPKDyLrAYKJn5rRpXoQ';\r\n\r\nconst urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\r\nconst lon = 27.55689040736249;\r\nconst lat = 53.89733609094718;\r\nlet profile = 'cycling';\r\nlet minutes = 5;\r\nlet coordinates = ''\r\n\r\nconst map = new mapboxgl.Map({\r\n  container: 'map',\r\n  style: 'mapbox://styles/mapbox/streets-v11',\r\n  center: [lon, lat],\r\n  zoom: 10\r\n});\r\n\r\n// const params = document.getElementById('params');\r\n\r\n// const marker = new mapboxgl.Marker({\r\n//   'color': 'red'\r\n// })\r\n// .setLngLat([lon, lat]) // Marker [lng, lat] coordinates\r\n// .addTo(map); // Add the marker to the map;\r\n\r\n// const lngLat = {\r\n//   lon: lon,\r\n//   lat: lat\r\n// };\r\n\r\nasync function getIso(lat, lon) {\r\n  const query = await fetch(\r\n    `${urlBase}${profile}/${lon},${lat}?contours_minutes=${minutes}&polygons=true&access_token=${mapboxgl.accessToken}`,\r\n    { method: 'GET' }\r\n  );\r\n  const data = await query.json();\r\n  // console.log(data.features[0].geometry.coordinates[0]);\r\n  // console.log(data);\r\n  await map.getSource('iso').setData(data);\r\n}\r\n\r\n// params.addEventListener('change', (event) => {\r\n//   if (event.target.name === 'profile') {\r\n//     profile = event.target.value;\r\n//   } else if (event.target.name === 'duration') {\r\n//     minutes = event.target.value;\r\n//   }\r\n//   getIso();\r\n// });\r\nlet from = document.querySelector('.from')\r\nlet inputs = document.querySelector('.inputs')\r\n\r\nconst geocoderFrom = new MapboxGeocoder({\r\n  accessToken: mapboxgl.accessToken,\r\n  mapboxgl: mapboxgl,\r\n  marker: true,\r\n  placeholder: 'From',\r\n});\r\n\r\nconst geocoderWhere = new MapboxGeocoder({\r\n  accessToken: mapboxgl.accessToken,\r\n  mapboxgl: mapboxgl,\r\n  marker: true,\r\n  placeholder: 'Where',\r\n});\r\n\r\nconsole.log(geocoderWhere, from);\r\nmap.addControl(geocoderFrom);\r\nmap.addControl(geocoderWhere);\r\n\r\nmap.on('load', () => {\r\n  map.addSource('iso', {\r\n    type: 'geojson',\r\n    data: {\r\n      'type': 'FeatureCollection',\r\n      'features': []\r\n    }\r\n  });\r\n\r\n  map.addLayer(\r\n    {\r\n      'id': 'isoLayer',\r\n      'type': 'fill',\r\n      'source': 'iso',\r\n      'layout': {},\r\n      'paint': {\r\n        'fill-color': '#5a3fc0',\r\n        'fill-opacity': 0.3\r\n      }\r\n    },\r\n    'poi-label'\r\n  );\r\n\r\n  map.addSource('single-point', {\r\n    'type': 'geojson',\r\n    'data': {\r\n      'type': 'FeatureCollection',\r\n      'features': []\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'point',\r\n    source: 'single-point',\r\n    type: 'circle',\r\n    paint: {\r\n      'circle-radius': 10,\r\n      'circle-color': '#448ee4'\r\n    }\r\n  })\r\n\r\n\r\n  // marker.setLngLat(lngLat).addTo(map);\r\n\r\n  geocoderFrom.on('result', (event) => {\r\n    // await map.getSource('single-point').setData(event.result.geometry)\r\n    coordinates = event.result.geometry.coordinates\r\n    getIso(coordinates[1], coordinates[0]);\r\n  });\r\n\r\n  getIso(lat, lon);\r\n});\r\n"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}
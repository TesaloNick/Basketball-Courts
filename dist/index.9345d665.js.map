{"mappings":"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","sources":["js/index.js"],"sourcesContent":["mapboxgl.accessToken = 'pk.eyJ1IjoidGVzYWxvbmljayIsImEiOiJjbDdodmdheHIwaWIyM3VtbTJjaXNreGt2In0.Er4yPKDyLrAYKJn5rRpXoQ';\r\n\r\nconst urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';\r\nconst lon = 27.55689040736249;\r\nconst lat = 53.89733609094718;\r\nlet profile = 'cycling';\r\nlet minutes = 5;\r\nlet coordinates = ''\r\n\r\nconst map = new mapboxgl.Map({\r\n  container: 'map',\r\n  style: 'mapbox://styles/mapbox/streets-v11',\r\n  center: [lon, lat],\r\n  zoom: 10\r\n});\r\n\r\nasync function getIso(lat, lon) {\r\n  const query = await fetch(\r\n    `${urlBase}${profile}/${lon},${lat}?contours_minutes=${minutes}&polygons=true&access_token=${mapboxgl.accessToken}`,\r\n    { method: 'GET' }\r\n  );\r\n  const data = await query.json();\r\n  console.log(data);\r\n  await map.getSource('iso').setData(data);\r\n}\r\n\r\nlet from = document.querySelector('.from')\r\nlet inputs = document.querySelector('.inputs')\r\n\r\nconst geocoderFrom = new MapboxGeocoder({\r\n  accessToken: mapboxgl.accessToken,\r\n  mapboxgl: mapboxgl,\r\n  marker: true,\r\n  placeholder: 'address',\r\n});\r\n\r\n// const geocoderWhere = new MapboxGeocoder({\r\n//   accessToken: mapboxgl.accessToken,\r\n//   mapboxgl: mapboxgl,\r\n//   marker: true,\r\n//   placeholder: 'Where',\r\n// });\r\n\r\n// console.log(geocoderWhere, from);\r\nmap.addControl(geocoderFrom);\r\n// map.addControl(geocoderWhere);\r\n\r\nmap.on('load', () => {\r\n  map.addSource('iso', {\r\n    type: 'geojson',\r\n    data: {\r\n      'type': 'FeatureCollection',\r\n      'features': []\r\n    }\r\n  });\r\n\r\n  map.addLayer(\r\n    {\r\n      'id': 'isoLayer',\r\n      'type': 'fill',\r\n      'source': 'iso',\r\n      'layout': {},\r\n      'paint': {\r\n        'fill-color': '#5a3fc0',\r\n        'fill-opacity': 0.3\r\n      }\r\n    },\r\n    'poi-label'\r\n  );\r\n  map.addSource('single-point', {\r\n    'type': 'geojson',\r\n    'data': {\r\n      'type': 'FeatureCollection',\r\n      'features': []\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'point',\r\n    source: 'single-point',\r\n    type: 'circle',\r\n    paint: {\r\n      'circle-radius': 10,\r\n      'circle-color': '#448ee4'\r\n    }\r\n  })\r\n\r\n  geocoderFrom.on('result', (event) => {\r\n    const list = document.querySelector('.list__ul')\r\n    const inputName = document.querySelector('.inputs__name')\r\n    const li = document.createElement('li')\r\n    li.dataset.address = event.result.place_name\r\n    li.innerHTML = inputName.value\r\n    li.classList.add('list__li')\r\n    list.append(li)\r\n\r\n    coordinates = event.result.geometry.coordinates\r\n    getIso(coordinates[1], coordinates[0]);\r\n  });\r\n\r\n  getIso(lat, lon);\r\n\r\n  //_______________________\r\n\r\n  map.addLayer({\r\n    id: 'clearances',\r\n    type: 'fill',\r\n    source: {\r\n      type: 'geojson',\r\n      data: obstacle\r\n    },\r\n    layout: {},\r\n    paint: {\r\n      'fill-color': '#f03b20',\r\n      'fill-opacity': 0.5,\r\n      'fill-outline-color': '#f03b20'\r\n    }\r\n  });\r\n\r\n  map.addSource('theRoute', {\r\n    type: 'geojson',\r\n    data: {\r\n      type: 'Feature'\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'theRoute',\r\n    type: 'line',\r\n    source: 'theRoute',\r\n    layout: {\r\n      'line-join': 'round',\r\n      'line-cap': 'round'\r\n    },\r\n    paint: {\r\n      'line-color': '#cccccc',\r\n      'line-opacity': 0.5,\r\n      'line-width': 13,\r\n      'line-blur': 0.5\r\n    }\r\n  });\r\n\r\n  // Source and layer for the bounding box\r\n  map.addSource('theBox', {\r\n    type: 'geojson',\r\n    data: {\r\n      type: 'Feature'\r\n    }\r\n  });\r\n\r\n  map.addLayer({\r\n    id: 'theBox',\r\n    type: 'fill',\r\n    source: 'theBox',\r\n    layout: {},\r\n    paint: {\r\n      'fill-color': '#FFC300',\r\n      'fill-opacity': 0.5,\r\n      'fill-outline-color': '#FFC300'\r\n    }\r\n  });\r\n});\r\n\r\n//________________________________________________________________________________________________\r\n\r\nconst directions = new MapboxDirections({\r\n  accessToken: mapboxgl.accessToken,\r\n  unit: 'metric',\r\n  profile: 'mapbox/driving',\r\n  alternatives: false,\r\n  geometries: 'geojson',\r\n  controls: { instructions: false },\r\n  flyTo: false\r\n});\r\n\r\nmap.addControl(directions, 'top-right');\r\nmap.scrollZoom.enable();\r\n\r\nconst clearances = {\r\n  type: 'FeatureCollection',\r\n  features: [\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.47426, 38.06673]\r\n      },\r\n      properties: {\r\n        clearance: \"13' 2\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.47208, 38.06694]\r\n      },\r\n      properties: {\r\n        clearance: \"13' 7\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.60485, 38.12184]\r\n      },\r\n      properties: {\r\n        clearance: \"13' 7\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.61905, 37.87504]\r\n      },\r\n      properties: {\r\n        clearance: \"12' 0\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.55946, 38.30213]\r\n      },\r\n      properties: {\r\n        clearance: \"13' 6\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.27235, 38.04954]\r\n      },\r\n      properties: {\r\n        clearance: \"13' 6\"\r\n      }\r\n    },\r\n    {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: [-84.27264, 37.82917]\r\n      },\r\n      properties: {\r\n        clearance: \"11' 6\"\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nconst obstacle = turf.buffer(clearances, 0.25, { units: 'kilometers' });\r\nlet bbox = [0, 0, 0, 0];\r\nlet polygon = turf.bboxPolygon(bbox);\r\n\r\nlet counter = 0;\r\nconst maxAttempts = 50;\r\nlet emoji = '';\r\nlet collision = '';\r\nlet detail = '';\r\nconst reports = document.getElementById('reports');\r\n\r\nfunction addCard(id, element, clear, detail) {\r\n  const card = document.createElement('div');\r\n  card.className = 'card';\r\n  // Add the response to the individual report created above\r\n  const heading = document.createElement('div');\r\n  // Set the class type based on clear value\r\n  heading.className =\r\n    clear === true\r\n      ? 'card-header route-found'\r\n      : 'card-header obstacle-found';\r\n  heading.innerHTML =\r\n    id === 0\r\n      ? `${emoji} The route ${collision}`\r\n      : `${emoji} Route ${id} ${collision}`;\r\n\r\n  const details = document.createElement('div');\r\n  details.className = 'card-details';\r\n  details.innerHTML = `This ${detail} obstacles.`;\r\n\r\n  card.appendChild(heading);\r\n  card.appendChild(details);\r\n  element.insertBefore(card, element.firstChild);\r\n}\r\n\r\nfunction noRoutes(element) {\r\n  const card = document.createElement('div');\r\n  card.className = 'card';\r\n  // Add the response to the individual report created above\r\n  const heading = document.createElement('div');\r\n  heading.className = 'card-header no-route';\r\n  emoji = '🛑';\r\n  heading.innerHTML = `${emoji} Ending search.`;\r\n\r\n  // Add details to the individual report\r\n  const details = document.createElement('div');\r\n  details.className = 'card-details';\r\n  details.innerHTML = `No clear route found in ${counter} tries.`;\r\n\r\n  card.appendChild(heading);\r\n  card.appendChild(details);\r\n  element.insertBefore(card, element.firstChild);\r\n}\r\n\r\ndirections.on('clear', () => {\r\n  map.setLayoutProperty('theRoute', 'visibility', 'none');\r\n  map.setLayoutProperty('theBox', 'visibility', 'none');\r\n\r\n  counter = 0;\r\n  reports.innerHTML = '';\r\n});\r\n\r\ndirections.on('route', (event) => {\r\n  // Hide the route and box by setting the opacity to zero\r\n  map.setLayoutProperty('theRoute', 'visibility', 'none');\r\n  map.setLayoutProperty('theBox', 'visibility', 'none');\r\n\r\n  if (counter >= maxAttempts) {\r\n    noRoutes(reports);\r\n  } else {\r\n    // Make each route visible\r\n    for (const route of event.route) {\r\n      // Make each route visible\r\n      map.setLayoutProperty('theRoute', 'visibility', 'visible');\r\n      map.setLayoutProperty('theBox', 'visibility', 'visible');\r\n\r\n      // Get GeoJSON LineString feature of route\r\n      const routeLine = polyline.toGeoJSON(route.geometry);\r\n\r\n      // Create a bounding box around this route\r\n      // The app will find a random point in the new bbox\r\n      bbox = turf.bbox(routeLine);\r\n      polygon = turf.bboxPolygon(bbox);\r\n\r\n      // Update the data for the route\r\n      // This will update the route line on the map\r\n      map.getSource('theRoute').setData(routeLine);\r\n\r\n      // Update the box\r\n      map.getSource('theBox').setData(polygon);\r\n\r\n      const clear = turf.booleanDisjoint(obstacle, routeLine);\r\n\r\n      if (clear === true) {\r\n        collision = 'does not intersect any obstacles!';\r\n        detail = `takes ${(route.duration / 60).toFixed(\r\n          0\r\n        )} minutes and avoids`;\r\n        emoji = '✔️';\r\n        map.setPaintProperty('theRoute', 'line-color', '#74c476');\r\n        // Hide the box\r\n        map.setLayoutProperty('theBox', 'visibility', 'none');\r\n        // Reset the counter\r\n        counter = 0;\r\n      } else {\r\n        // Collision occurred, so increment the counter\r\n        counter = counter + 1;\r\n        // As the attempts increase, expand the search area\r\n        // by a factor of the attempt count\r\n        polygon = turf.transformScale(polygon, counter * 0.01);\r\n        bbox = turf.bbox(polygon);\r\n        collision = 'is bad.';\r\n        detail = `takes ${(route.duration / 60).toFixed(\r\n          0\r\n        )} minutes and hits`;\r\n        emoji = '⚠️';\r\n        map.setPaintProperty('theRoute', 'line-color', '#de2d26');\r\n\r\n        // Add a randomly selected waypoint to get a new route from the Directions API\r\n        const randomWaypoint = turf.randomPoint(1, { bbox: bbox });\r\n        directions.setWaypoint(\r\n          0,\r\n          randomWaypoint['features'][0].geometry.coordinates\r\n        );\r\n      }\r\n      // Add a new report section to the sidebar\r\n      addCard(counter, reports, clear, detail);\r\n    }\r\n  }\r\n});\r\n"],"names":[],"version":3,"file":"index.9345d665.js.map","sourceRoot":"/__parcel_source_root/"}